steps:

  # 1) Build the Docker image, injecting your secrets
  - name: 'gcr.io/cloud-builders/docker'
    secretEnv:
      - VITE_APP_EMAILJS_SERVICE_ID
      - VITE_APP_EMAILJS_TEMPLATE_ID
      - VITE_APP_EMAILJS_PUBLIC_KEY
    args:
      [
        "build",
        # ‚Üê pass each secret as a build-arg
        "--build-arg=VITE_APP_EMAILJS_SERVICE_ID=${_VITE_APP_EMAILJS_SERVICE_ID}",
        "--build-arg=VITE_APP_EMAILJS_TEMPLATE_ID=${_VITE_APP_EMAILJS_TEMPLATE_ID}",
        "--build-arg=VITE_APP_EMAILJS_PUBLIC_KEY=${_VITE_APP_EMAILJS_PUBLIC_KEY}",
        "-t",
        "us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA",
        "."
      ]

  # 2) Verify the image was built
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'images', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA' ]

  # 3) Push the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA' ]

  # 4) Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        "run", "deploy", "$REPO_NAME",
        "--image", "us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA",
        "--region", "us-central1"
      ]

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/VITE_APP_EMAILJS_SERVICE_ID/versions/latest
      env: 'VITE_APP_EMAILJS_SERVICE_ID'
    - versionName: projects/$PROJECT_ID/secrets/VITE_APP_EMAILJS_TEMPLATE_ID/versions/latest
      env: 'VITE_APP_EMAILJS_TEMPLATE_ID'
    - versionName: projects/$PROJECT_ID/secrets/VITE_APP_EMAILJS_PUBLIC_KEY/versions/latest
      env: 'VITE_APP_EMAILJS_PUBLIC_KEY'

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
